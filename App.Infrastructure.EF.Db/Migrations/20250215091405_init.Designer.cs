// <auto-generated />
using System;
using App.Infrastructure.DataBase.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App.Infrastructure.EFCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250215091405_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("App.Domain.Core.Entites.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("ActivationUser")
                        .HasColumnType("int");

                    b.Property<float>("Balance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(1000f);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RegisterAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ActivationUser = 3,
                            Balance = 1000f,
                            ConcurrencyStamp = "d74be311-7d6e-4a7b-ba57-7408b47e440e",
                            EmailConfirmed = false,
                            FirstName = "Admin",
                            IsDeleted = false,
                            LastName = "Admin",
                            LockoutEnabled = false,
                            Password = "123456",
                            PasswordHash = "AQAAAAIAAYagAAAAEHn6OQMa/Ob8xM7JwA7x4OniHe1mw23bvQ+vqsuVScuK4F76HAuA5Qh2bB2yJIn0bg==",
                            PhoneNumberConfirmed = false,
                            RegisterAt = new DateTime(2025, 2, 15, 12, 44, 4, 466, DateTimeKind.Local).AddTicks(8541),
                            RoleId = 1,
                            SecurityStamp = "7d2b4451-df36-43b9-b1cf-8af782a2ffcc",
                            TwoFactorEnabled = false,
                            UserName = "Admin@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ActivationUser = 3,
                            Balance = 1000f,
                            ConcurrencyStamp = "8be7275f-06cc-4d90-ac24-08deb575e52c",
                            EmailConfirmed = false,
                            FirstName = "Amir",
                            IsDeleted = false,
                            LastName = "Amiri",
                            LockoutEnabled = false,
                            Password = "456789",
                            PasswordHash = "AQAAAAIAAYagAAAAEAm5Uo/EbDGNWjlwABXIM/wp/j6L9rcRFi0+Sks29fu/UWGjZx42rA341dzQ8VWgwg==",
                            PhoneNumberConfirmed = false,
                            RegisterAt = new DateTime(2025, 2, 15, 12, 44, 4, 466, DateTimeKind.Local).AddTicks(8578),
                            RoleId = 2,
                            SecurityStamp = "924489f8-0bbc-4f76-9cd5-3faeb139d1cd",
                            TwoFactorEnabled = false,
                            UserName = "Customer@gmail.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ActivationUser = 3,
                            Balance = 1000f,
                            ConcurrencyStamp = "b73c48f1-8b2a-42b4-b222-95384f36c1d8",
                            EmailConfirmed = false,
                            FirstName = "Amir",
                            IsDeleted = false,
                            LastName = "Amiri",
                            LockoutEnabled = false,
                            Password = "258852",
                            PasswordHash = "AQAAAAIAAYagAAAAEKB1RZusW7bIxF0gKfFAD9ID81w29b+BgoCcsiCPC40FEhYb3QRpH2MwLbQGTH/KqA==",
                            PhoneNumberConfirmed = false,
                            RegisterAt = new DateTime(2025, 2, 15, 12, 44, 4, 466, DateTimeKind.Local).AddTicks(8601),
                            RoleId = 3,
                            SecurityStamp = "00da4340-0796-459b-9d5e-53cc6c98827f",
                            TwoFactorEnabled = false,
                            UserName = "Expert@gmail.com"
                        });
                });

            modelBuilder.Entity("App.Domain.Core.Entites.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImagePath = "",
                            Title = "تاسیسات"
                        },
                        new
                        {
                            Id = 2,
                            ImagePath = "",
                            Title = "خانه"
                        },
                        new
                        {
                            Id = 3,
                            ImagePath = "",
                            Title = "نظافت"
                        },
                        new
                        {
                            Id = 4,
                            ImagePath = "",
                            Title = "زیبایی"
                        },
                        new
                        {
                            Id = 5,
                            ImagePath = "",
                            Title = "تعمیرات اشیا"
                        },
                        new
                        {
                            Id = 6,
                            ImagePath = "",
                            Title = " خودرو و حمل بار"
                        },
                        new
                        {
                            Id = 7,
                            ImagePath = "",
                            Title = "سلامت"
                        },
                        new
                        {
                            Id = 8,
                            ImagePath = "D:\\photos\\برقکاری کوچک.png",
                            ParentId = 1,
                            Title = "برقکاری"
                        },
                        new
                        {
                            Id = 9,
                            ImagePath = "D:\\photos\\لوله کشی.png",
                            ParentId = 1,
                            Title = "لوله کشی"
                        },
                        new
                        {
                            Id = 10,
                            ImagePath = "D:\\photos\\سرمایش گرمایش.png",
                            ParentId = 1,
                            Title = "سرمایش و گرمایش"
                        },
                        new
                        {
                            Id = 11,
                            ImagePath = "D:\\photos\\تعمیرات ساختمان.png",
                            ParentId = 2,
                            Title = "تعمیرات ساختمان"
                        },
                        new
                        {
                            Id = 12,
                            ImagePath = "D:\\photos\\بازسازی.png",
                            ParentId = 2,
                            Title = "شیشه کاری"
                        },
                        new
                        {
                            Id = 13,
                            ImagePath = "D:\\photos\\باغبانی.png",
                            ParentId = 2,
                            Title = "باغبانی"
                        },
                        new
                        {
                            Id = 14,
                            ImagePath = "",
                            ParentId = 3,
                            Title = "نظافت و پذیرایی"
                        },
                        new
                        {
                            Id = 15,
                            ImagePath = "",
                            ParentId = 3,
                            Title = "شستشو"
                        },
                        new
                        {
                            Id = 16,
                            ImagePath = "",
                            ParentId = 3,
                            Title = "کارواش و دیتیلینگ"
                        },
                        new
                        {
                            Id = 17,
                            ImagePath = "",
                            ParentId = 4,
                            Title = "زیبایی بانوان"
                        },
                        new
                        {
                            Id = 18,
                            ImagePath = "",
                            ParentId = 4,
                            Title = "پیرایش و زیبایی آقایان"
                        },
                        new
                        {
                            Id = 19,
                            ImagePath = "",
                            ParentId = 4,
                            Title = "تندرستی و ورزش"
                        },
                        new
                        {
                            Id = 20,
                            ImagePath = "",
                            ParentId = 5,
                            Title = "نصب و تعمیر لوازم خانگی"
                        },
                        new
                        {
                            Id = 21,
                            ImagePath = "",
                            ParentId = 5,
                            Title = "خدمات کامپیوتری"
                        },
                        new
                        {
                            Id = 22,
                            ImagePath = "",
                            ParentId = 5,
                            Title = "تعمیرات موبایل"
                        },
                        new
                        {
                            Id = 23,
                            ImagePath = "",
                            ParentId = 6,
                            Title = "خدمات و تعمیرات خودرو"
                        },
                        new
                        {
                            Id = 24,
                            ImagePath = "",
                            ParentId = 6,
                            Title = "باربری و جابجایی"
                        },
                        new
                        {
                            Id = 25,
                            ImagePath = "",
                            ParentId = 7,
                            Title = "پرشکی و پرستاری"
                        },
                        new
                        {
                            Id = 26,
                            ImagePath = "",
                            ParentId = 7,
                            Title = "حیوانات خانگی"
                        });
                });

            modelBuilder.Entity("App.Domain.Core.Entites.Expert", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Biographi")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Expert", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "اینجا",
                            Biographi = "بیوگرافی",
                            CityId = 1,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("App.Domain.Core.Entites.HouseWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasePrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(10000m);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("HouseWorks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasePrice = 5000m,
                            CategoryId = 10,
                            Description = "نیاز به توضیحات تکمیلی مشکل",
                            IsDeleted = false,
                            Title = "تعمیر و سرویس پکیج",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 2,
                            BasePrice = 3000m,
                            CategoryId = 10,
                            Description = "",
                            IsDeleted = false,
                            Title = "تعمیر و سرویس آبگرمکن",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 3,
                            BasePrice = 3500m,
                            CategoryId = 10,
                            Description = "",
                            IsDeleted = false,
                            Title = "نصب و تعمیر رادیاتور شوفاژ",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 4,
                            BasePrice = 4000m,
                            CategoryId = 10,
                            Description = "پرتقاضا",
                            IsDeleted = false,
                            Title = "تعمیر و سرویس کولر آبی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 5,
                            BasePrice = 2500m,
                            CategoryId = 10,
                            Description = "",
                            IsDeleted = false,
                            Title = "تعمیر و نصب کولر گازی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 6,
                            BasePrice = 5000m,
                            CategoryId = 9,
                            Description = "نیاز به توضیحات تکمیلی مشکل",
                            IsDeleted = false,
                            Title = "نصب و تعمیر شیرآلات",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 7,
                            BasePrice = 4000m,
                            CategoryId = 9,
                            Description = "",
                            IsDeleted = false,
                            Title = "تخلیه چاه و لوله بازکنی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 8,
                            BasePrice = 1000m,
                            CategoryId = 9,
                            Description = "",
                            IsDeleted = false,
                            Title = "نصب و تعمیر دستگاه تصفیه آب",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 9,
                            BasePrice = 2000m,
                            CategoryId = 9,
                            Description = "",
                            IsDeleted = false,
                            Title = "لوله کشی گاز",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 10,
                            BasePrice = 4000m,
                            CategoryId = 9,
                            Description = "به صورت تخصصی",
                            IsDeleted = false,
                            Title = "اتصال به شبکه فاضلاب شهری",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 11,
                            BasePrice = 1000m,
                            CategoryId = 8,
                            Description = "به صورت تخصصی",
                            IsDeleted = false,
                            Title = "سیم و کابل کشی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 12,
                            BasePrice = 3500m,
                            CategoryId = 8,
                            Description = "",
                            IsDeleted = false,
                            Title = "رفع اتصالی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 13,
                            BasePrice = 1000m,
                            CategoryId = 8,
                            Description = "",
                            IsDeleted = false,
                            Title = "کلید و پریز",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 14,
                            BasePrice = 3500m,
                            CategoryId = 8,
                            Description = "",
                            IsDeleted = false,
                            Title = "نصب و تعویض فیوز",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 15,
                            BasePrice = 2000m,
                            CategoryId = 8,
                            Description = "",
                            IsDeleted = false,
                            Title = "نصب و تعمیر دوربین مداربسته",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 16,
                            BasePrice = 1000m,
                            CategoryId = 11,
                            Description = "به صورت تخصصی",
                            IsDeleted = false,
                            Title = "نقاشی ساختمان",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 17,
                            BasePrice = 3500m,
                            CategoryId = 11,
                            Description = "",
                            IsDeleted = false,
                            Title = "نصب کاغذ دیواری",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 18,
                            BasePrice = 2000m,
                            CategoryId = 11,
                            Description = "",
                            IsDeleted = false,
                            Title = "ساخت و نصب توری",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 19,
                            BasePrice = 1000m,
                            CategoryId = 11,
                            Description = "",
                            IsDeleted = false,
                            Title = "بنایی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 20,
                            BasePrice = 3500m,
                            CategoryId = 11,
                            Description = "به صورت تخصصی",
                            IsDeleted = false,
                            Title = "کفسابی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 21,
                            BasePrice = 1000m,
                            CategoryId = 12,
                            Description = "",
                            IsDeleted = false,
                            Title = "ساخت و نصب درب و پنجره",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 22,
                            BasePrice = 3500m,
                            CategoryId = 12,
                            Description = "",
                            IsDeleted = false,
                            Title = "شیشه بری و آینه کاری",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 23,
                            BasePrice = 2000m,
                            CategoryId = 12,
                            Description = "جدید",
                            IsDeleted = false,
                            Title = "هندریل شیشه ای",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 24,
                            BasePrice = 1000m,
                            CategoryId = 12,
                            Description = "",
                            IsDeleted = false,
                            Title = "پارتیشن شیشه ای",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 25,
                            BasePrice = 3500m,
                            CategoryId = 12,
                            Description = "",
                            IsDeleted = false,
                            Title = "نصب و تعمیر درب اتوماتیک",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 26,
                            BasePrice = 1000m,
                            CategoryId = 13,
                            Description = "به صورت تخصصی",
                            IsDeleted = false,
                            Title = " مشاوره گل و گیاه",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 27,
                            BasePrice = 3500m,
                            CategoryId = 13,
                            Description = "",
                            IsDeleted = false,
                            Title = "تشخیص و کنترل آفت",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 28,
                            BasePrice = 2000m,
                            CategoryId = 13,
                            Description = "",
                            IsDeleted = false,
                            Title = "رسیگی به فضای سبز",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 29,
                            BasePrice = 1000m,
                            CategoryId = 14,
                            Description = "",
                            IsDeleted = false,
                            Title = "سرویس عادی نظافت",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 30,
                            BasePrice = 3500m,
                            CategoryId = 14,
                            Description = "",
                            IsDeleted = false,
                            Title = "سرویس لوکس نظافت",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 31,
                            BasePrice = 2000m,
                            CategoryId = 14,
                            Description = "",
                            IsDeleted = false,
                            Title = "پذیرایی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 32,
                            BasePrice = 1000m,
                            CategoryId = 14,
                            Description = "",
                            IsDeleted = false,
                            Title = "کارگر ساده",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 33,
                            BasePrice = 3500m,
                            CategoryId = 14,
                            Description = "",
                            IsDeleted = false,
                            Title = "نظافت راه پله",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 34,
                            BasePrice = 1000m,
                            CategoryId = 15,
                            Description = "(فرش ، موکت ، مبل)",
                            IsDeleted = false,
                            Title = "شستشو در منزل",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 35,
                            BasePrice = 3500m,
                            CategoryId = 15,
                            Description = "",
                            IsDeleted = false,
                            Title = "قالیشویی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 36,
                            BasePrice = 2000m,
                            CategoryId = 15,
                            Description = "",
                            IsDeleted = false,
                            Title = "خشکشویی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 37,
                            BasePrice = 1000m,
                            CategoryId = 15,
                            Description = "",
                            IsDeleted = false,
                            Title = "پرده شویی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 38,
                            BasePrice = 1000m,
                            CategoryId = 16,
                            Description = "(آب ، نانو)",
                            IsDeleted = false,
                            Title = "کارواش",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 39,
                            BasePrice = 3500m,
                            CategoryId = 16,
                            Description = "",
                            IsDeleted = false,
                            Title = "صفرشویی خودرو",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 40,
                            BasePrice = 2000m,
                            CategoryId = 16,
                            Description = "جدید",
                            IsDeleted = false,
                            Title = "سرامیک حودرو",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 41,
                            BasePrice = 1000m,
                            CategoryId = 16,
                            Description = "",
                            IsDeleted = false,
                            Title = "واکس و پولیش",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 42,
                            BasePrice = 3500m,
                            CategoryId = 16,
                            Description = "به صورت تخصصی",
                            IsDeleted = false,
                            Title = "صافکاری و نقاشی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 43,
                            BasePrice = 1000m,
                            CategoryId = 17,
                            Description = "",
                            IsDeleted = false,
                            Title = "خدمات ناخن",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 44,
                            BasePrice = 3500m,
                            CategoryId = 17,
                            Description = "",
                            IsDeleted = false,
                            Title = " رنگ مو در منزل",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 45,
                            BasePrice = 2000m,
                            CategoryId = 17,
                            Description = "جدید",
                            IsDeleted = false,
                            Title = "پاکسازی و لایه برداری پوست",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 46,
                            BasePrice = 1000m,
                            CategoryId = 17,
                            Description = "",
                            IsDeleted = false,
                            Title = "آرایش صورت در منزل",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 47,
                            BasePrice = 3500m,
                            CategoryId = 17,
                            Description = "",
                            IsDeleted = false,
                            Title = "لیفت و لیمنت مژه",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 48,
                            BasePrice = 1000m,
                            CategoryId = 18,
                            Description = "",
                            IsDeleted = false,
                            Title = "کوتاهی مو و اصلاح صورت",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 49,
                            BasePrice = 3500m,
                            CategoryId = 18,
                            Description = "",
                            IsDeleted = false,
                            Title = "مراقب و زیبایی آقایان",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 50,
                            BasePrice = 2000m,
                            CategoryId = 18,
                            Description = "",
                            IsDeleted = false,
                            Title = "گریم داماد",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 51,
                            BasePrice = 1000m,
                            CategoryId = 19,
                            Description = "به صورت تخصصی",
                            IsDeleted = false,
                            Title = "برنامه ورزشی و تغذیه",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 52,
                            BasePrice = 3500m,
                            CategoryId = 19,
                            Description = "",
                            IsDeleted = false,
                            Title = "کلاس یوگا در خانه",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 53,
                            BasePrice = 2000m,
                            CategoryId = 19,
                            Description = "",
                            IsDeleted = false,
                            Title = "کلاس پیلاتس در خانه",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 54,
                            BasePrice = 1000m,
                            CategoryId = 19,
                            Description = "جدید",
                            IsDeleted = false,
                            Title = "کلاس سی ایکس در خانه",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 55,
                            BasePrice = 3500m,
                            CategoryId = 19,
                            Description = "",
                            IsDeleted = false,
                            Title = "حرکات اصلاحی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 56,
                            BasePrice = 1000m,
                            CategoryId = 20,
                            Description = "",
                            IsDeleted = false,
                            Title = "نصب و تعمیر یخچال فریزر",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 57,
                            BasePrice = 3500m,
                            CategoryId = 20,
                            Description = "",
                            IsDeleted = false,
                            Title = " نصب و تعمیر ماشین ظرفشویی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 58,
                            BasePrice = 2000m,
                            CategoryId = 20,
                            Description = "",
                            IsDeleted = false,
                            Title = "نصب و تعمیر ماشین لباسشویی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 59,
                            BasePrice = 1000m,
                            CategoryId = 20,
                            Description = "",
                            IsDeleted = false,
                            Title = "نصب و تعمیر فر",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 60,
                            BasePrice = 3500m,
                            CategoryId = 20,
                            Description = "",
                            IsDeleted = false,
                            Title = "نصب و تعمیر هود آشپرخانه",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 61,
                            BasePrice = 1000m,
                            CategoryId = 20,
                            Description = "",
                            IsDeleted = false,
                            Title = "نصب و تعمیر اجاق گاز",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 62,
                            BasePrice = 3500m,
                            CategoryId = 20,
                            Description = "به صورت تخصصی",
                            IsDeleted = false,
                            Title = " تعمیرات تلویزیون",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 63,
                            BasePrice = 2000m,
                            CategoryId = 20,
                            Description = "جدید",
                            IsDeleted = false,
                            Title = "تعمیر چای ساز و قهوه ساز",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 64,
                            BasePrice = 1000m,
                            CategoryId = 20,
                            Description = "",
                            IsDeleted = false,
                            Title = "تعمیر جاروبرقی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 65,
                            BasePrice = 3500m,
                            CategoryId = 20,
                            Description = "",
                            IsDeleted = false,
                            Title = "نصب و تعویض فیلتر آب",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 66,
                            BasePrice = 1000m,
                            CategoryId = 21,
                            Description = "",
                            IsDeleted = false,
                            Title = "تعمیر کامپیوتر و لپتاپ",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 67,
                            BasePrice = 3500m,
                            CategoryId = 21,
                            Description = "",
                            IsDeleted = false,
                            Title = " تعمیر ماشین های اداری",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 68,
                            BasePrice = 2000m,
                            CategoryId = 21,
                            Description = "",
                            IsDeleted = false,
                            Title = "پشتیبانی شبکه وسرور",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 69,
                            BasePrice = 1000m,
                            CategoryId = 21,
                            Description = "به صورت تخصصی",
                            IsDeleted = false,
                            Title = "طراحی سایت و لوگو",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 70,
                            BasePrice = 3500m,
                            CategoryId = 21,
                            Description = "",
                            IsDeleted = false,
                            Title = "مودم و اینترنت",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 71,
                            BasePrice = 1000m,
                            CategoryId = 22,
                            Description = "",
                            IsDeleted = false,
                            Title = "خدمات تاچ و ال سی دی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 72,
                            BasePrice = 3500m,
                            CategoryId = 22,
                            Description = "",
                            IsDeleted = false,
                            Title = " خدمات باتری",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 73,
                            BasePrice = 2000m,
                            CategoryId = 22,
                            Description = "جدید",
                            IsDeleted = false,
                            Title = "خدمات نرم افزاری",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 74,
                            BasePrice = 1000m,
                            CategoryId = 22,
                            Description = "",
                            IsDeleted = false,
                            Title = "خدمات اسپیکر",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 75,
                            BasePrice = 3500m,
                            CategoryId = 22,
                            Description = "",
                            IsDeleted = false,
                            Title = "خدمات دوربین",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 76,
                            BasePrice = 1000m,
                            CategoryId = 23,
                            Description = "زیر قیمت کارخانه",
                            IsDeleted = false,
                            Title = "تعویض باتری خودرو",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 77,
                            BasePrice = 3500m,
                            CategoryId = 23,
                            Description = "",
                            IsDeleted = false,
                            Title = " برق و باتری خودرو",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 78,
                            BasePrice = 2000m,
                            CategoryId = 23,
                            Description = "",
                            IsDeleted = false,
                            Title = "مکانیکی خودرو",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 79,
                            BasePrice = 1000m,
                            CategoryId = 23,
                            Description = "",
                            IsDeleted = false,
                            Title = "امداد خودرو",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 80,
                            BasePrice = 3500m,
                            CategoryId = 23,
                            Description = "",
                            IsDeleted = false,
                            Title = "پنچرگیری",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 81,
                            BasePrice = 1000m,
                            CategoryId = 23,
                            Description = "",
                            IsDeleted = false,
                            Title = "کارشناسی خودرو",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 82,
                            BasePrice = 3500m,
                            CategoryId = 23,
                            Description = "",
                            IsDeleted = false,
                            Title = "تعویض لاستیک",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 83,
                            BasePrice = 2000m,
                            CategoryId = 23,
                            Description = "",
                            IsDeleted = false,
                            Title = "تعویض لنت خودرو",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 84,
                            BasePrice = 1000m,
                            CategoryId = 23,
                            Description = "",
                            IsDeleted = false,
                            Title = "سوخت رسانی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 85,
                            BasePrice = 3500m,
                            CategoryId = 23,
                            Description = "",
                            IsDeleted = false,
                            Title = "تعمیر موتور سیکلت",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 86,
                            BasePrice = 1000m,
                            CategoryId = 24,
                            Description = "",
                            IsDeleted = false,
                            Title = "اسباب کشی با خاور و کامیون",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 87,
                            BasePrice = 3500m,
                            CategoryId = 24,
                            Description = "",
                            IsDeleted = false,
                            Title = " اسباب کشی با وانت و نیسان",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 88,
                            BasePrice = 2000m,
                            CategoryId = 24,
                            Description = "نیاز به توضیح",
                            IsDeleted = false,
                            Title = "اسباب کشی و حمل بین شهری",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 89,
                            BasePrice = 1000m,
                            CategoryId = 24,
                            Description = "",
                            IsDeleted = false,
                            Title = "کارگر جابجایی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 90,
                            BasePrice = 3500m,
                            CategoryId = 24,
                            Description = "",
                            IsDeleted = false,
                            Title = "حمل نخاله و ضایعات ساختمانی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 91,
                            BasePrice = 1000m,
                            CategoryId = 25,
                            Description = "",
                            IsDeleted = false,
                            Title = "مراقبت و نگهداری",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 92,
                            BasePrice = 3500m,
                            CategoryId = 25,
                            Description = "",
                            IsDeleted = false,
                            Title = " پرستاری و تزریقات",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 93,
                            BasePrice = 2000m,
                            CategoryId = 25,
                            Description = "",
                            IsDeleted = false,
                            Title = "معاینه پزشکی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 94,
                            BasePrice = 1000m,
                            CategoryId = 25,
                            Description = "",
                            IsDeleted = false,
                            Title = "پیراپزشکی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 95,
                            BasePrice = 3500m,
                            CategoryId = 25,
                            Description = "",
                            IsDeleted = false,
                            Title = "آزمایش و نمونه گیری",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 96,
                            BasePrice = 1000m,
                            CategoryId = 26,
                            Description = "جدید",
                            IsDeleted = false,
                            Title = "هتل های حیوانات خانگی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 97,
                            BasePrice = 3500m,
                            CategoryId = 26,
                            Description = "",
                            IsDeleted = false,
                            Title = " خدماتدامپزشکی در محل",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 98,
                            BasePrice = 2000m,
                            CategoryId = 26,
                            Description = "به صورت تخصصی",
                            IsDeleted = false,
                            Title = "خدمات تربیتی حیوانات خانگی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 99,
                            BasePrice = 1000m,
                            CategoryId = 26,
                            Description = "",
                            IsDeleted = false,
                            Title = "خدمات شستشو و آرایشی",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 100,
                            BasePrice = 3500m,
                            CategoryId = 26,
                            Description = "",
                            IsDeleted = false,
                            Title = "پت شاپ",
                            ViewCount = 0
                        });
                });

            modelBuilder.Entity("App.Domain.Core.Entites.User.Admin", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("App.Domain.Core.Entites.User.Customer", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasMaxLength(255)
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "اینجا",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "تهران"
                        },
                        new
                        {
                            Id = 2,
                            Name = "مشهد"
                        },
                        new
                        {
                            Id = 3,
                            Name = "اصفهان"
                        },
                        new
                        {
                            Id = 4,
                            Name = "شیراز"
                        },
                        new
                        {
                            Id = 5,
                            Name = "تبریز"
                        },
                        new
                        {
                            Id = 6,
                            Name = "کرج"
                        },
                        new
                        {
                            Id = 7,
                            Name = "قم"
                        },
                        new
                        {
                            Id = 8,
                            Name = "اهواز"
                        },
                        new
                        {
                            Id = 9,
                            Name = "رشت"
                        },
                        new
                        {
                            Id = 10,
                            Name = "کرمانشاه"
                        },
                        new
                        {
                            Id = 11,
                            Name = "زاهدان"
                        },
                        new
                        {
                            Id = 12,
                            Name = "ارومیه"
                        },
                        new
                        {
                            Id = 13,
                            Name = "یزد"
                        },
                        new
                        {
                            Id = 14,
                            Name = "همدان"
                        },
                        new
                        {
                            Id = 15,
                            Name = "قزوین"
                        },
                        new
                        {
                            Id = 16,
                            Name = "سنندج"
                        },
                        new
                        {
                            Id = 17,
                            Name = "بندرعباس"
                        },
                        new
                        {
                            Id = 18,
                            Name = "زنجان"
                        },
                        new
                        {
                            Id = 19,
                            Name = "ساری"
                        },
                        new
                        {
                            Id = 20,
                            Name = "بوشهر"
                        },
                        new
                        {
                            Id = 21,
                            Name = "مازندران"
                        },
                        new
                        {
                            Id = 22,
                            Name = "گرگان"
                        },
                        new
                        {
                            Id = 23,
                            Name = "کرمان"
                        },
                        new
                        {
                            Id = 24,
                            Name = "خرم آباد"
                        },
                        new
                        {
                            Id = 25,
                            Name = "سمنان"
                        });
                });

            modelBuilder.Entity("Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpertId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpertRating")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPlayable")
                        .HasColumnType("bit");

                    b.Property<int?>("stausService")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExpertId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("ExpertHouseWork", b =>
                {
                    b.Property<int>("ExpertId")
                        .HasColumnType("int");

                    b.Property<int>("SkillsId")
                        .HasColumnType("int");

                    b.HasKey("ExpertId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("ExpertHouseWork");
                });

            modelBuilder.Entity("Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HouseWorkId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("HouseWorkId")
                        .IsUnique();

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Expert",
                            NormalizedName = "EXPERT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("ExpertId")
                        .HasColumnType("int");

                    b.Property<int>("HouseWorkId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<DateTime>("RunningTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StausService")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ExpertId");

                    b.HasIndex("HouseWorkId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Suggestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DeliverDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("ExpertId")
                        .HasColumnType("int");

                    b.Property<int?>("HouseWorkId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<float>("SuggestPrice")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ExpertId");

                    b.HasIndex("HouseWorkId");

                    b.HasIndex("OrderId");

                    b.ToTable("Suggestions");
                });

            modelBuilder.Entity("App.Domain.Core.Entites.Category", b =>
                {
                    b.HasOne("App.Domain.Core.Entites.Category", "ParentCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("App.Domain.Core.Entites.Expert", b =>
                {
                    b.HasOne("City", "City")
                        .WithMany("Experts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("App.Domain.Core.Entites.AppUser", null)
                        .WithOne("Expert")
                        .HasForeignKey("App.Domain.Core.Entites.Expert", "Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("App.Domain.Core.Entites.HouseWork", b =>
                {
                    b.HasOne("App.Domain.Core.Entites.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("App.Domain.Core.Entites.User.Admin", b =>
                {
                    b.HasOne("App.Domain.Core.Entites.AppUser", null)
                        .WithOne("Admin")
                        .HasForeignKey("App.Domain.Core.Entites.User.Admin", "Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("App.Domain.Core.Entites.User.Customer", b =>
                {
                    b.HasOne("App.Domain.Core.Entites.AppUser", null)
                        .WithOne("Customer")
                        .HasForeignKey("App.Domain.Core.Entites.User.Customer", "Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Comment", b =>
                {
                    b.HasOne("App.Domain.Core.Entites.Expert", "Expert")
                        .WithMany("Comments")
                        .HasForeignKey("ExpertId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Expert");
                });

            modelBuilder.Entity("ExpertHouseWork", b =>
                {
                    b.HasOne("App.Domain.Core.Entites.Expert", null)
                        .WithMany()
                        .HasForeignKey("ExpertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Core.Entites.HouseWork", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Image", b =>
                {
                    b.HasOne("App.Domain.Core.Entites.HouseWork", "HouseWork")
                        .WithOne("Image")
                        .HasForeignKey("Image", "HouseWorkId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("HouseWork");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("App.Domain.Core.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("App.Domain.Core.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Core.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("App.Domain.Core.Entites.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.HasOne("City", "City")
                        .WithMany("Orders")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("App.Domain.Core.Entites.User.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("App.Domain.Core.Entites.Expert", "Expert")
                        .WithMany()
                        .HasForeignKey("ExpertId");

                    b.HasOne("App.Domain.Core.Entites.HouseWork", "HouseWork")
                        .WithMany("Orders")
                        .HasForeignKey("HouseWorkId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Customer");

                    b.Navigation("Expert");

                    b.Navigation("HouseWork");
                });

            modelBuilder.Entity("Suggestion", b =>
                {
                    b.HasOne("App.Domain.Core.Entites.Expert", "Expert")
                        .WithMany("Suggestions")
                        .HasForeignKey("ExpertId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("App.Domain.Core.Entites.HouseWork", null)
                        .WithMany("Suggestions")
                        .HasForeignKey("HouseWorkId");

                    b.HasOne("Order", "Order")
                        .WithMany("Suggestions")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Expert");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("App.Domain.Core.Entites.AppUser", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Customer");

                    b.Navigation("Expert");
                });

            modelBuilder.Entity("App.Domain.Core.Entites.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("App.Domain.Core.Entites.Expert", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Suggestions");
                });

            modelBuilder.Entity("App.Domain.Core.Entites.HouseWork", b =>
                {
                    b.Navigation("Image")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Suggestions");
                });

            modelBuilder.Entity("App.Domain.Core.Entites.User.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("City", b =>
                {
                    b.Navigation("Experts");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.Navigation("Suggestions");
                });
#pragma warning restore 612, 618
        }
    }
}
